var ControlBar = function (e, t) { var n, i, a, r, l, s, o, c, d, u, v, m, f, y, p, h, g, E, L, $, C, T, b = this.player = e, k = this, B = null, A = null, I = null, S = { bitrate: null, caption: null, track: null }, M = NaN, x = !1, P = 0, _ = {}, F = !1, w = function (e) { L = e, a = document.getElementById(U("videoController")), r = document.getElementById(U("playPauseBtn")), l = document.getElementById(U("bitrateListBtn")), s = document.getElementById(U("captionBtn")), o = document.getElementById(U("trackSwitchBtn")), c = document.getElementById(U("seekbar")), d = document.getElementById(U("seekbar-play")), u = document.getElementById(U("seekbar-buffer")), v = document.getElementById(U("muteBtn")), m = document.getElementById(U("volumebar")), f = document.getElementById(U("fullscreenBtn")), y = document.getElementById(U("videoTime")), p = document.getElementById(U("videoDuration")), h = document.getElementById(U("thumbnail-container")), g = document.getElementById(U("thumbnail-elem")), E = document.getElementById(U("thumbnail-time-label")) }, D = function () { k.player.on(dashjs.MediaPlayer.events.PLAYBACK_STARTED, Y, this), k.player.on(dashjs.MediaPlayer.events.PLAYBACK_PAUSED, O, this), k.player.on(dashjs.MediaPlayer.events.PLAYBACK_TIME_UPDATED, W, this), k.player.on(dashjs.MediaPlayer.events.STREAM_ACTIVATED, em, this), k.player.on(dashjs.MediaPlayer.events.STREAM_DEACTIVATED, ev, this), k.player.on(dashjs.MediaPlayer.events.STREAM_TEARDOWN_COMPLETE, eE, this), k.player.on(dashjs.MediaPlayer.events.TEXT_TRACKS_ADDED, eh, this), k.player.on(dashjs.MediaPlayer.events.BUFFER_LEVEL_UPDATED, eg, this) }, R = function () { k.player.off(dashjs.MediaPlayer.events.PLAYBACK_STARTED, Y, this), k.player.off(dashjs.MediaPlayer.events.PLAYBACK_PAUSED, O, this), k.player.off(dashjs.MediaPlayer.events.PLAYBACK_TIME_UPDATED, W, this), k.player.off(dashjs.MediaPlayer.events.STREAM_ACTIVATED, em, this), k.player.off(dashjs.MediaPlayer.events.STREAM_DEACTIVATED, ev, this), k.player.off(dashjs.MediaPlayer.events.STREAM_TEARDOWN_COMPLETE, eE, this), k.player.off(dashjs.MediaPlayer.events.TEXT_TRACKS_ADDED, eh, this), k.player.off(dashjs.MediaPlayer.events.BUFFER_LEVEL_UPDATED, eg, this) }, U = function (e) { return e + (L || "") }, V = function () { k.player.isPaused() ? q() : z() }, q = function () { var e = document.getElementById(U("iconPlayPause")); null !== e && (e.classList.remove("icon-pause"), e.classList.add("icon-play")) }, z = function () { var e = document.getElementById(U("iconPlayPause")); null !== e && (e.classList.remove("icon-play"), e.classList.add("icon-pause")) }, K = function () { V.call(this), k.player.isPaused() ? k.player.play() : k.player.pause() }, O = function () { V() }, Y = function () { ei(t ? k.player.timeAsUTC() : k.player.time()), ea(), V(), $ && clearInterval($) }, W = function () { ea(), x || (ei(t ? b.timeAsUTC() : b.time()), d && (d.style.width = b.time() / b.duration() * 100 + "%"), "range" === c.getAttribute("type") && (c.value = b.time())) }, X = function () { var e = 0; if (k.player.getDashMetrics) { var t = k.player.getDashMetrics(); !t || (e = t.getCurrentBufferLevel("video", !0)) || (e = t.getCurrentBufferLevel("audio", !0)) } return e }, j = function () { var e = document.getElementById(U("iconMute")); k.player.isMuted() ? (e.classList.remove("icon-mute-off"), e.classList.add("icon-mute-on")) : (e.classList.remove("icon-mute-on"), e.classList.add("icon-mute-off")) }, N = function () { k.player.isMuted() && !isNaN(M) ? Q(M) : (M = parseFloat(m.value), Q(0)), k.player.setMute(0 === k.player.getVolume()), j() }, Q = function (e) { "number" == typeof e && (m.value = e), k.player.setVolume(parseFloat(m.value)), k.player.setMute(0 === k.player.getVolume()), isNaN(M) && (M = k.player.getVolume()), j() }, H = function (e) { var t = c.getBoundingClientRect(); return Math.floor(k.player.duration() * (e.clientX - t.left) / t.width) }, G = function (e) { x = !0; var t = H(e); d && (d.style.width = t / k.player.duration() * 100 + "%"), ei(t), document.addEventListener("mousemove", Z, !0), document.addEventListener("mouseup", J, !0) }, J = function (e) { x = !1, document.removeEventListener("mousemove", Z, !0), document.removeEventListener("mouseup", J, !0); var t = H(e); isNaN(t) || (t = t < 0 ? 0 : t, k.player.seek(t)), ee(e), d && (d.style.width = t / k.player.duration() * 100 + "%") }, Z = function (e) { if (h && g) { var r = (i || n).getBoundingClientRect(), l = c.getBoundingClientRect(), s = a.getBoundingClientRect(), o = e.clientX - l.left, u = H(e); !isNaN(u) && (x && (ei(u), d && (d.style.width = u / k.player.duration() * 100 + "%")), k.player.provideThumbnail && k.player.provideThumbnail(u, function (e) { if (e) { o += l.left - r.left; var n = parseInt(window.getComputedStyle(g).width); isNaN(n) || (o -= n / 2); var i = .15 * r.height / e.height; i > 2 && (i = 2), h.style.left = o + "px", h.style.display = "", h.style.bottom += Math.round(s.height + 10) + "px", h.style.height = Math.round(e.height) + "px"; var a = 'url("' + e.url + '") ' + (e.x > 0 ? "-" + e.x : "0") + "px " + (e.y > 0 ? "-" + e.y : "0") + "px"; g.style.background = a, g.style.width = e.width + "px", g.style.height = e.height + "px", g.style.transform = "scale(" + i + "," + i + ")", E && (E.textContent = t ? k.player.formatUTC(u) : k.player.convertToTimeCode(u)) } })) } }, ee = function () { h && (h.style.display = "none") }, et = function () { k.player.seekToOriginalLive() }, en = function (e) { k.player.isDynamic() ? (p.textContent = "‚óè LIVE", p.onclick || (p.onclick = et, p.classList.add("live-icon"))) : !isNaN(e) && isFinite(e) && (p.textContent = t ? k.player.formatUTC(e) : k.player.convertToTimeCode(e), p.classList.remove("live-icon")) }, ei = function (e) { if (!(e < 0)) { if (k.player.isDynamic() && k.player.duration()) { var n = k.player.duration() - e; n < k.player.getTargetLiveDelay() + 1 ? p.classList.add("live") : p.classList.remove("live"), y.textContent = "- " + k.player.convertToTimeCode(n) } else isNaN(e) || (y.textContent = t ? k.player.formatUTC(e) : k.player.convertToTimeCode(e)) } }, ea = function () { var e = k.player.duration(); e !== parseFloat(c.max) && (en(t ? k.player.durationAsUTC() : e), c.max = e) }, er = function () { var e; el() ? (es(), (e = f.querySelector(".icon-fullscreen-enter")).classList.remove("icon-fullscreen-enter"), e.classList.add("icon-fullscreen-exit")) : (ed(), (e = f.querySelector(".icon-fullscreen-exit")).classList.remove("icon-fullscreen-exit"), e.classList.add("icon-fullscreen-enter")) }, el = function () { return document.fullscreenElement || document.msFullscreenElement || document.mozFullScreen || document.webkitIsFullScreen }, es = function () { var e = i || n; document.fullscreenElement || (e.requestFullscreen ? e.requestFullscreen() : e.msRequestFullscreen ? e.msRequestFullscreen() : e.mozRequestFullScreen ? e.mozRequestFullScreen() : e.webkitRequestFullScreen()), a.classList.add("video-controller-fullscreen"), window.addEventListener("mousemove", eo), eo() }, eo = function () { ec(), P = setTimeout(function () { a.classList.add("hide") }, 4e3) }, ec = function () { clearTimeout(P), a.classList.remove("hide") }, ed = function () { window.removeEventListener("mousemove", eo), ec(), document.fullscreenElement && (document.exitFullscreen ? document.exitFullscreen() : document.mozCancelFullScreen ? document.mozCancelFullScreen() : document.msExitFullscreen ? document.msExitFullscreen() : document.webkitCancelFullScreen()), a.classList.remove("video-controller-fullscreen") }, eu = function () { el() ? ed() : es(), B && B.classList.add("hide"), A && A.classList.add("hide"), I && I.classList.add("hide") }, ev = function (e) { e.streamInfo && _[e.streamInfo.id] && delete _[e.streamInfo.id] }, em = function (e) { var t = e.streamInfo; ea(), ef(), ey(), ep(t) }, ef = function () { var e; if (l) { ex(A, l, S.bitrate), A = null; var t = { menuType: "bitrate" }; if (t.audio = k.player.getBitrateInfoListFor && k.player.getBitrateInfoListFor("audio") || [], t.video = k.player.getBitrateInfoListFor && k.player.getBitrateInfoListFor("video") || [], t.images = k.player.getBitrateInfoListFor && k.player.getBitrateInfoListFor("image") || [], t.audio.length >= 1 || t.video.length >= 1 || t.images.length >= 1) { A = eL(t, e = function (e, t) { var n = isNaN(t) ? " Auto Switch" : Math.floor(e.bitrate / 1e3) + " kbps"; return n + (e && e.width && e.height ? " (" + e.width + "x" + e.height + ")" : "") }); var n = function () { eA(A, l) }; S.bitrate = n, l.addEventListener("click", n), l.classList.remove("hide") } else l.classList.add("hide") } }, ey = function () { var e; if (o) { ex(I, o, S.track), I = null; var t = { menuType: "track" }; if (t.audio = k.player.getTracksFor("audio"), t.video = k.player.getTracksFor("video"), t.audio.length > 1 || t.video.length > 1) { I = eL(t, e = function (e) { var t = eb(e.labels), n = ""; return e.lang && (n += "Language - " + e.lang + " "), e.roles[0] && (n += "- Role: " + e.roles[0] + " "), e.codec && (n += "- Codec: " + e.codec + " "), t || n }); var n = function () { eA(I, o) }; S.track = n, o.addEventListener("click", n), o.classList.remove("hide") } } }, ep = function (e) { var t = b.getActiveStream().getStreamInfo(); if (s && (!t.id || t.id === e)) { ex(B, s, S.caption), B = null, B = eL({ menuType: "caption", arr: _[e] || [] }, function (e, t) { if (isNaN(t)) return "OFF"; var n = eb(e.labels); return n ? n + " : " + e.type : e.lang + " : " + e.kind }); var n, i = function () { eA(B, s) }; S.caption = i, s.addEventListener("click", i), s.classList.remove("hide") } }, eh = function (e) { _[e.streamId] || (_[e.streamId] = []), _[e.streamId] = _[e.streamId].concat(e.tracks), ep(e.streamId) }, eg = function () { u && (u.style.width = (b.time() + X()) / b.duration() * 100 + "%") }, eE = function () { q(), y.textContent = "00:00" }, eL = function (e, t) { var n = e.menuType, i = document.createElement("div"); switch (i.id = n + "Menu", i.classList.add("menu"), i.classList.add("hide"), i.classList.add("unselectable"), i.classList.add("menu-item-unselected"), a.appendChild(i), n) { case "caption": i.appendChild(document.createElement("ul")), i = eB(i, eT(n, e.arr, t), "caption", n + "-list"), eI(e$(e, n), n + "-list"); break; case "track": case "bitrate": e.video.length >= 1 && (i.appendChild(ek("video")), i = eB(i, eT(n, e.video, t), "video", "video-" + n + "-list"), eI(e$(e.video, n, "video"), "video-" + n + "-list")), e.audio.length >= 1 && (i.appendChild(ek("audio")), i = eB(i, eT(n, e.audio, t), "audio", "audio-" + n + "-list"), eI(e$(e.audio, n, "audio"), "audio-" + n + "-list")), e.images && e.images.length >= 1 && (i.appendChild(ek("image")), i = eB(i, eT(n, e.images, t, !1), "image", "image-" + n + "-list"), eI(e$(e.images, n, "image"), "image-" + n + "-list")) }return window.addEventListener("resize", eS, !0), i }, e$ = function (e, t, n) { if ("track" === t) { var i = k.player.getCurrentTrackFor(n), a = 0; return e.some(function (e, t) { if (eC(e, i)) return a = t, !0 }), a } if ("bitrate" === t) { var r = k.player.getSettings(); return r.streaming && r.streaming.abr && r.streaming.abr.initialBitrate ? 0 | r.streaming.abr.initialBitrate.mediaType : 0 } if ("caption" === t) return k.player.getCurrentTextTrackIndex() + 1 }, eC = function (e, t) { var n = e.id === t.id, i = e.viewpoint === t.viewpoint, a = e.lang === t.lang, r = e.roles.toString() === t.roles.toString(), l = !e.accessibility && !t.accessibility || e.accessibility && t.accessibility && e.accessibility.toString() === t.accessibility.toString(), s = !e.audioChannelConfiguration && !t.audioChannelConfiguration || e.audioChannelConfiguration && t.audioChannelConfiguration && e.audioChannelConfiguration.toString() === t.audioChannelConfiguration.toString(); return n && i && a && r && l && s }, eT = function (e, t, n, i) { i = void 0 === i || i; var a = []; return t.forEach(function (e, t) { a.push(n(e, t)) }), "track" !== e && i && a.unshift(n(null, NaN)), a }, eb = function (e) { for (var t = navigator.languages && navigator.languages.length ? navigator.languages : [navigator.language], n = 0; n < e.length; n++)for (var i = 0; i < t.length; i++)if (e[n].lang && t[i] && t[i].indexOf(e[n].lang) > -1) return e[n].text; return 1 === e.length ? e[0].text : null }, ek = function (e) { var t = document.createElement("div"), n = document.createElement("div"), i = document.createElement("ul"); return t.id = e, n.textContent = e.charAt(0).toUpperCase() + e.slice(1), n.classList.add("menu-sub-menu-title"), i.id = e + "Content", i.classList.add(e + "-menu-content"), t.appendChild(n), t.appendChild(i), t }, eB = function (e, t, n, i) { for (var a = 0; a < t.length; a++) { var r, l = document.createElement("li"); l.id = i + "Item_" + a, l.index = a, l.mediaType = n, l.name = i, l.selected = !1, l.textContent = t[a], l.onmouseover = function () { !0 !== this.selected && this.classList.add("menu-item-over") }, l.onmouseout = function () { this.classList.remove("menu-item-over") }, l.onclick = eI.bind(l), (r = "caption" === n ? e.querySelector("ul") : e.querySelector("." + n + "-menu-content")).appendChild(l) } return e }, eA = function (e, t) { e.classList.contains("hide") ? (e.classList.remove("hide"), e.onmouseleave = function () { this.classList.add("hide") }) : e.classList.add("hide"), e.style.position = el() ? "fixed" : "absolute", eM(e, t) }, eI = function (e, t) { try { var n = "number" == typeof e ? document.getElementById(t + "Item_" + e) : this; if (n) { for (var i = n.parentElement.children, a = 0; a < i.length; a++)i[a].selected = !1, i[a].classList.remove("menu-item-selected"), i[a].classList.add("menu-item-unselected"); if (n.selected = !0, n.classList.remove("menu-item-over"), n.classList.remove("menu-item-unselected"), n.classList.add("menu-item-selected"), void 0 === t) switch (n.name) { case "video-bitrate-list": case "audio-bitrate-list": var r = { streaming: { abr: { autoSwitchBitrate: {} } } }; n.index > 0 ? (r.streaming.abr.autoSwitchBitrate[n.mediaType] = !1, k.player.updateSettings(r), k.player.setQualityFor(n.mediaType, n.index - 1, F)) : (r.streaming.abr.autoSwitchBitrate[n.mediaType] = !0, k.player.updateSettings(r)); break; case "image-bitrate-list": b.setQualityFor(n.mediaType, n.index); break; case "caption-list": k.player.setTextTrack(n.index - 1); break; case "video-track-list": case "audio-track-list": k.player.setCurrentTrack(k.player.getTracksFor(n.mediaType)[n.index]) } } } catch (l) { console.error(l) } }, eS = function () { B && eM(B, s), A && eM(A, l), I && eM(I, o) }, eM = function (e, t) { t.offsetLeft + e.clientWidth >= a.clientWidth ? (e.style.right = "0px", e.style.left = "") : e.style.left = t.offsetLeft + "px"; var n = a.offsetTop - e.offsetHeight; e.style.top = n + "px" }, ex = function (e, t, n) { try { e && a && (t.removeEventListener("click", n), a.removeChild(e)) } catch (i) { } }, eP = function (e, t) { var n = function () { var t = document.createEvent("Event"); t.initEvent("change", !0, !0), t.forceChange = !0, e.dispatchEvent(t) }; this.addEventListener("change", function (e) { var i; !e.forceChange && "range" === e.target.getAttribute("type") && (e.stopPropagation(), (i = document.createEvent("Event")).initEvent("input", !0, !0), e.target.dispatchEvent(i), t && (e.target.removeEventListener("mouseup", n), e.target.addEventListener("mouseup", n))) }, !0) }; return { setVolume: Q, setDuration: en, setTime: ei, setPlayer: function (e) { k.player && R(), e = k.player = e, D() }, removeMenu: function (e, t) { try { e && (a.removeChild(e), e = null, t.classList.add("hide")) } catch (n) { } }, initialize: function (e) { if (!b) throw Error("Please pass an instance of MediaPlayer.js when instantiating the ControlBar Object"); if (!(n = b.getVideoElement())) throw Error("Please call initialize after you have called attachView on MediaPlayer.js"); t = void 0 !== t && t, w(e), n.controls = !1, i = n.parentNode, s.classList.add("hide"), o && o.classList.add("hide"), D(), r.addEventListener("click", K), v.addEventListener("click", N), f.addEventListener("click", eu), c.addEventListener("mousedown", G, !0), c.addEventListener("mousemove", Z, !0), c.addEventListener("touchmove", Z, { passive: !0 }), c.addEventListener("mouseout", ee, !0), c.addEventListener("touchcancel", ee, !0), c.addEventListener("touchend", ee, !0), m.addEventListener("input", Q, !0), document.addEventListener("fullscreenchange", er, !1), document.addEventListener("MSFullscreenChange", er, !1), document.addEventListener("mozfullscreenchange", er, !1), document.addEventListener("webkitfullscreenchange", er, !1), navigator.userAgent.match(/Trident.*rv[ :]*11\./) && (eP(c, !0), eP(m, !1)) }, show: function () { a.classList.remove("hide") }, hide: function () { a.classList.add("hide") }, disable: function () { a.classList.add("disable") }, enable: function () { a.classList.remove("disable") }, forceQualitySwitch: function (e) { F = e }, resetSelectionMenus: function () { S.bitrate && l.removeEventListener("click", S.bitrate), S.track && o.removeEventListener("click", S.track), S.caption && s.removeEventListener("click", S.caption), B && this.removeMenu(B, s), I && this.removeMenu(I, o), A && this.removeMenu(A, l) }, reset: function () { window.removeEventListener("resize", eS), this.resetSelectionMenus(), S = [], x = !1, d && (d.style.width = "0%"), u && (u.style.width = "0%") }, destroy: function () { this.reset(), r.removeEventListener("click", K), v.removeEventListener("click", N), f.removeEventListener("click", eu), c.removeEventListener("mousedown", G), m.removeEventListener("input", Q), c.removeEventListener("mousemove", Z), c.removeEventListener("touchmove", Z), c.removeEventListener("mouseout", ee), c.removeEventListener("touchcancel", ee), c.removeEventListener("touchend", ee), R(), document.removeEventListener("fullscreenchange", er), document.removeEventListener("MSFullscreenChange", er), document.removeEventListener("mozfullscreenchange", er), document.removeEventListener("webkitfullscreenchange", er) } } };