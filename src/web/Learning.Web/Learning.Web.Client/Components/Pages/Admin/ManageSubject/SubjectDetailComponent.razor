@using Learning.Business.Dto.Core.Subject
@using Learning.Business.Requests.Core.Subject
<MudStack>
    @if (!string.IsNullOrEmpty(_subjectDetail.ThumbnailImage))
    {
        <MudCardMedia Height="200" Image="@_subjectDetail.ThumbnailImage">
        </MudCardMedia>
    }
    
    <MudItem>
        <MudText Typo="Typo.h3">@_subjectDetail.SubjectName</MudText>
        </MudItem>
        <MudItem>
            <SubjectSubscriptionComponent SubjectId="SubjectId" />
        </MudItem>
        <MudItem>
            <MudText Typo="Typo.h6">Description</MudText>
            <MudText Typo="Typo.body1">@_subjectDetail.SubjectDescription</MudText>
        </MudItem>
    </MudStack>

    @code {

    [EditorRequired][Parameter]
    public int? SubjectId { get; set; }

    private SubjectDetailDto _subjectDetail = new();

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        await LoadSubjectDetails();
        StateHasChanged();
    }

    private async Task LoadSubjectDetails()
    {
        if (!SubjectId.HasValue)
        {
            return;
        }
        _subjectDetail = (await Mediator.Send(new GetSubjectDetailByIdQuery()
            {
                SubjectId = SubjectId.Value
            })).Data;
    }
}
