@page "/exam-notifications"
@using Learning.Business.Dto.Notifications.ExamNotification
@using Learning.Business.Requests.Notifications.ExamNotification
@using Learning.Shared.Common.Constants
@using MediatR
@inject IMediator Mediator
<AppPage>
    <MudContainer>
        <MudGrid>
            <MudItem xs="12">
                <MudText Typo="Typo.h4" Align="Align.Center"><b>Exam Notifications</b></MudText>
                <MudDivider />
            </MudItem>
            <MudItem xs="12">
                <div class="d-flex flex-wrap gap-5 justify-center pb-10">
                    @foreach (var notification in _examNotifications)
                    {
                        <MudPaper Class="rounded-lg" Style="width: 300px; overflow: hidden; background-color: var(--gray-50)" Elevation="5">
                            <MudStack Spacing="0">

                                <MudImage Src="@notification.ImageAbsPath" ObjectFit="ObjectFit.Cover">
                                </MudImage>
                                <div class="text-center">
                                    @if (notification.ValidTill.HasValue)
                                    {
                                        <MudText Class="relative pa-2 rounded-lg" Style="top: -10px;background-color:var(--gray-50)" Typo="Typo.caption" Align="Align.Center">
                                            <b>
                                                @notification.ValidTill?.ToString(DateFormats.DisplayDateFormat)
                                            </b>
                                        </MudText>
                                    }
                                    else
                                    {
                                        <MudText Class="relative pa-2 rounded-lg" Style="top: -10px;background-color:transparent;color:transparent" Typo="Typo.caption" Align="Align.Center">
                                            placeholder
                                        </MudText>
                                    }
                                </div>

                                <MudText Typo="Typo.h6" Align="Align.Center">
                                    <b>@notification.Title</b>
                                </MudText>
                                <MudButton Color="Color.Primary"
                                           Href="@($"/exam-notifications/{notification.Id}/apply")">
                                    <b>more</b>
                                </MudButton>
                            </MudStack>
                        </MudPaper>
                    }
                </div>
            </MudItem>
        </MudGrid>
    </MudContainer>

</AppPage>
@code {
    private ExamNotificationCardItemDto[] _examNotifications = [];

    protected override async Task OnInitializedAsync()
    {
        try
        {
            _examNotifications = await Mediator.Send(new ActiveExamNotificationsQuery());
        }
        catch (Exception ex)
        {
            NavigationManager.NavigateTo("/error");
        }
    }
}
