@page "/course/{SubjectCode}/buy"
@using Learning.Business.Dto.Core.Subject
@using Learning.Business.Requests.Core.Subject.Purchase
@using Learning.Shared.Common.Extensions
@using Microsoft.AspNetCore.Authorization
@inherits AppBaseComponent
@attribute [Authorize(RoleConstant.User)]
@inject NavigationManager NavigationManager
<div class="w-100 h-100 d-flex justify-center">
    @if (!_isLoading && _details != null)
    {
        <div style="margin: auto">
            <MudText>@_details.CourseName / @_details.ClassName</MudText>
                <MudText>@_details.SubjectName</MudText>
                <MudText>Subscription Exipres On: @_details.SubscriptionEndDate</MudText>
                <MudText>@_details.BuyPrice.ToCurrency()</MudText>
                <AppProgressButton Variant="Variant.Filled" Size="Size.Large" OnClick=OnBuyNowClicked
                                   IsProgressing=@_buyNowInProgress
                                   Color="Color.Success" StartIcon="@Icons.Material.TwoTone.ShoppingCartCheckout">
                    Confirm Purchase
                </AppProgressButton>
            </div>
    }
</div>
@code {
    [Parameter]
    public string SubjectCode { get; set; }

    SubjectPurchaseDetailDto _details;
    private bool _buyNowInProgress = false;

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (!firstRender) return;
        await LoadDetails();
    }

    private async Task LoadDetails()
    {
        ChangeToLoadingState();
        await AppMediator.Send(new SubjectPurchaseDetailsQuery()
            {
                SubjectCode = SubjectCode
            })
        .OnSuccess(data =>
        {
            _details = data;

            ChangeToLoadedState();
            if (_details.Result == Shared.Common.Enums.SubjectPurchaseValidationEnum.AlreadyPurchased)
            {
                NavigationManager.NavigateTo($"course/{SubjectCode}");
            }
        });
    }

    private async Task OnBuyNowClicked()
    {
        ChangeToLoadingState(ref _buyNowInProgress);
        await AppMediator.Send(new SubjectBuyCommand()
            {
                SubjectId = _details.SubjectId
            })
        .OnSuccess(data =>
        {
            ToastService.Success("Course Purchased Successfully.");
            ChangeToLoadedState(ref _buyNowInProgress);
            NavigationManager.NavigateTo($"course/{SubjectCode}");
        })
        .OnError(err =>
        {
            ToastService.Error(err.Message);
            ChangeToLoadedState(ref _buyNowInProgress);
            NavigationManager.NavigateTo($"course/{SubjectCode}");
        });
    }
}
