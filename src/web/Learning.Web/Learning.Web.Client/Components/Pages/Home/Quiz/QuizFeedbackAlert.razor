@using static Learning.Web.Client.Components.Pages.Home.Quiz.QuizTestOptionComponent

<style>
    .text-success {
        color: #197b42 !important;
    }

    .text-error {
        color: #7b1919 !important;
    }
</style>
<MudDialog ContentClass="pa-5" Class="rounded-lg" Style=@($"background-color: {_popupBackgroundColor}")>
    <DialogContent>
        <MudStack Spacing="9" Class="px-5 text-center" AlignItems="AlignItems.Center">

            <MudStack AlignItems="AlignItems.Center" Spacing="1">
                <MudIcon Icon="@(DidChoseCorrectionOption ? Icons.Material.Rounded.CheckCircleOutline : Icons.Material.Rounded.Close)" Size="Size.Large"
                         Class="@(DidChoseCorrectionOption ? "text-success" : "text-error" )" />

                <MudText Typo="Typo.h5" Class="@(DidChoseCorrectionOption ? "text-success" : "text-error" )">
                    <b>@(DidChoseCorrectionOption ? "Correct Option" : "Incorrect Option")</b>
                </MudText>
            </MudStack>

            @if (!string.IsNullOrEmpty(CorrectOption.Option))
            {
                @if (DidChoseCorrectionOption)
                {
                    <MudStack Spacing="1">
                        <MudText Typo="Typo.h5"><b class="d-block">@CorrectOption.Option</b></MudText>
                        <MudText Typo="Typo.subtitle1">is the right answer.</MudText>
                    </MudStack>
                }
                else
                {
                    <MudStack Spacing="1">
                        <MudText Typo="Typo.subtitle1">You chose the wrong choice.</MudText>
                    </MudStack>
                }
            }
            else
            {
                @if (DidChoseCorrectionOption)
                {
                    <MudStack Spacing="1">
                        <MudImage Class="rounded-lg" Src="@CorrectOption.OptionAbsUrl" />
                        <MudText Typo="Typo.subtitle1"><b>Option @(CorrectOption.Order)</b> is the right option.</MudText>
                    </MudStack>
                }
                else
                {
                    <MudStack Spacing="1">
                        <MudText Typo="Typo.subtitle1">You chose the wrong choice.</MudText>
                    </MudStack>

                }
            }
            <MudButton EndIcon="@Icons.Material.Rounded.NavigateNext"
                       OnClick="Ok" Color="Color.Surface" Size="Size.Large" Variant="Variant.Outlined">@(!IsLastQuestion ? "Next Question" : "Finish")</MudButton>
        </MudStack>
    </DialogContent>

</MudDialog>
@code {
    [CascadingParameter]
    private MudDialogInstance? MudDialog { get; set; }

    [Parameter]
    public required OptionDto CorrectOption { get; set; }

    [Parameter]
    public required bool DidChoseCorrectionOption { get; set; }

    [Parameter]
    public required bool IsLastQuestion { get; set; }

    private string _popupBackgroundColor => DidChoseCorrectionOption ? "var(--green-light-1)" : "var(--red-light-1)";

    private void Ok() => MudDialog.Close(DialogResult.Ok(true));
}
