<div class="app-base-container"
     style="background: @_background">
    <div class="app-container-translucent d-flex flex-column justify-center" style="height: @_height; padding-top: @_paddingY; padding-bottom: @_paddingY">
        @ChildContent
    </div>
</div>
@code {
    [Parameter, EditorRequired]
    public RenderFragment? ChildContent { get; set; }

    #region BackgroundImage
    [Parameter]
    public string? BackgroundImage { get; set; }
    private string? lastBackgroundImage;
    #endregion

    #region BackgroundColor
    [Parameter]
    public string? BackgroundColor { get; set; }
    private string? lastBackgroundColor;
    #endregion

    #region IsHeightFixed
    [Parameter]
    public bool IsHeightFixed { get; set; }
    private bool lastIsHeightFixed;
    private string _height = "100%";
    #endregion

    #region PaddingY
    [Parameter]
    public int PaddingY { get; set; }
    private int lastPaddingY;
    private string _paddingY = "0px";
    #endregion

    private string _background = string.Empty;

    protected override void OnParametersSet()
    {
        if (lastBackgroundColor != BackgroundColor)
        {
            _background = BackgroundColor ?? "#FFFFFF";
            lastBackgroundColor = BackgroundColor;
        }
        if (lastBackgroundImage != BackgroundImage)
        {
            _background = $"url({BackgroundImage})";
            lastBackgroundImage = BackgroundImage;
        }

        if (lastIsHeightFixed != IsHeightFixed)
        {
            _height = IsHeightFixed ? "var(--component-height)" : "unset";
            lastIsHeightFixed = IsHeightFixed;
        }
        if (lastPaddingY != PaddingY)
        {
            _paddingY = $"{PaddingY}px";
            lastPaddingY = PaddingY;
        }

    }
}
