<div class="px-5 py-4 px-md-6 py-md-5 app-option-border @(IsSelected ? "app-option-selected" : string.Empty)  cursor-pointer" @onclick="OnOptionSelected">
	<MudStack Row Justify="Justify.SpaceBetween" AlignItems="AlignItems.Center">
		<h6>@Text</h6>
		<div class="app-option-item app-option-border @(IsSelected ? "app-option-round-selected" : string.Empty)  d-flex justify-center align-center">
			@if (IsSelected)
			{
				<MudIcon Class="align-item-center" Icon="@Icons.Material.Filled.Check" Style="width: 18px; height:18px;" Size="Size.Large"></MudIcon>
			}
		</div>

	</MudStack>
</div>
@code {
	[Parameter, EditorRequired]
	public int OptionOrder { get; set; }

	[Parameter]
	public string? Text { get; set; }

	[Parameter, EditorRequired]
	public bool IsSelected { get; set; }

	[Parameter, EditorRequired]
	public EventCallback<int> OnSelected { get; set; }

	private void OnOptionSelected()
	{
		if (OnSelected.HasDelegate)
		{
			OnSelected.InvokeAsync(OptionOrder);
		}
	}
}
